{"version":3,"sources":["Assets/noPosterSmall.png","Components/Loader.js","Components/Message.js","Components/Section.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Loader","role","aria-label","Text","span","props","color","Message","text","Title","Grid","Section","title","children","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","map","movie","poster_path","original_title","release_date","vote_average","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","console","log","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","e","preventDefault","searchByTerm","target","Content","Cover","bgImage","Backdrop","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5834c424.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n  margin-top: 50px\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n)\r\n\r\nexport default Loader;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 12px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require('../Assets/noPosterSmall.png').default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{' '}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Section from 'Components/Section';\nimport { Helmet } from 'react-helmet';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                // release date가 있을 때만 표시, otherwise substring error.\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n                rating={movie.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                // release date가 있을 때만 표시, otherwise substring error.\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n                rating={movie.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                // release date가 있을 때만 표시, otherwise substring error.\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n                rating={movie.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"33158bb84ecdb7fa41e6c45b2c443fe6\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState ({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\nexport default HomeContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport { Helmet } from 'react-helmet';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Show\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                // release date가 있을 때만 표시, otherwise substring error.\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                rating={show.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Show\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                // release date가 있을 때만 표시, otherwise substring error.\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                rating={show.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                // release date가 있을 때만 표시, otherwise substring error.\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                rating={show.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from 'Components/Message';\nimport { Helmet } from 'react-helmet';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                // release date가 있을 때만 표시, otherwise substring error.\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n                rating={movie.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                // release date가 있을 때만 표시, otherwise substring error.\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                rating={show.vote_average}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message text={error} color=\"#e74c3c\" />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message text=\"Nothing found\" color=\"#95a5a6\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (e) => {\n    const { target:{value} } = e;\n    console.log(value);\n    this.setState({\n      searchTerm: value\n    })\n  }\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading... | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{' '}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require('../../Assets/noPosterSmall.png')\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `,\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/'),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push('/');\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({data: result} = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({data: result} = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    console.log(this.state);\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}